{"version":3,"sources":["index.js"],"names":["BSPProjectSum","completeTasks","incompleteTasks","this","props","project","tasks","forEach","task","status","push","today","Date","setHours","created","finished","dayLong","Math","floor","getTime","className","length","React","Component","BSPProjectCard","title","href","onClick","e","gotoDetailed","id","name","description","BSPProjectTask","delTask","bind","doneTask","tempTasks","filter","t","refreshDetailedPage","aTask","aProject","undefined","tasksDoneToday","find","updated","getFullYear","getMonth","getDate","oldUpdated","isCompleteButton","taskName","isDone","actionButton","BSPTaskForm","state","addTask","fillTaskName","getNextTaskId","maxID","Number","preventDefault","project_id","setState","target","value","onSubmit","type","placeholder","onChange","BSPEditProject","projectName","projectDesc","editProject","fillProjectName","fillProjectDesc","completeProject","uncompleteProject","delProject","validateEdit","validateDone","alert","every","p","window","confirm","tempProjects","projects","projectList","gotoHome","editButton","data-toggle","data-target","completeButton","tabIndex","role","rows","data-dismiss","BSPAddProject","addProject","validate","getNextProjectId","newID","BSPHome","doneProjects","undoneProjects","doneProjectsCards","map","key","undoneProjectsCards","BSPAchievement","completeProjects","BSPSearchResult","searchResult","byName","toUpperCase","indexOf","searchText","byDesc","searchResultCards","BSPDetailProject","taskForm","BSPNavbar","fillSearchText","gotoAchievements","BSPMiniDashboard","incompleteProjects","BSPFooter","BSPApps","newProject","datas","page","detailedProject","text","navbar","footer","minidashboard","content","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6f00d95.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n// a component to show project summary in a project card\nclass BSPProjectSum extends React.Component {\n\trender(){\n\t\tconst completeTasks = [];\n\t\tconst incompleteTasks = [];\n\n\t\t// filter completed tasks and incomplete tasks\n\t\tthis.props.project.tasks.forEach((task) => {\n\t\t\tif(task.status === 'Done'){\n\t\t\t\tcompleteTasks.push(task);\n\t\t\t}else{\n\t\t\t\tincompleteTasks.push(task);\n\t\t\t}\n\t\t});\n\n\t\t// count how old a project since it's created\n\t\tconst today = new Date();\n\t\ttoday.setHours(0, 0, 0, 0);\n\n\t\tconst created = new Date(this.props.project.created);\n\t\tconst finished = new Date(this.props.project.finished);\n\t\tlet dayLong = 0;\n\n\t\tif(this.props.project.status === 'Done'){\n\t\t\tdayLong = Math.floor((finished.getTime() - created.getTime())/(1000*60*60*24));\n\t\t}else{\n\t\t\tdayLong = Math.floor((today.getTime() - created.getTime())/(1000*60*60*24));\n\n\t\t\tif(dayLong < 0){\n\t\t\t\tdayLong = 0;\n\t\t\t}\n\t\t}\n\t\t\n\n\t\treturn(\n\t\t\t<p className=\"text-dark\">{dayLong} days • {completeTasks.length} of {this.props.project.tasks.length} tasks completed.</p>\n\t\t);\n\t}\n}\n\n// a component to show project card\nclass BSPProjectCard extends React.Component{\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"card bg-warning mb-3\" title=\"A Project\">\n\t\t\t\t<div className=\"card-body text-light\">\n\t\t\t\t\t<a href=\"detailed\" className=\"text-dark\" onClick={(e) => this.props.gotoDetailed(this.props.project.id, e)} ><h5 className=\"card-title\">{this.props.project.name}</h5></a>\n\t\t\t\t\t<p className=\"card-text\">{this.props.project.description}</p>\n\t\t\t\t\t<BSPProjectSum project={this.props.project} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// a component to show a project small task\nclass BSPProjectTask extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.delTask = this.delTask.bind(this);\n\t\tthis.doneTask = this.doneTask.bind(this);\n\t}\n\n\t// delete a task function\n\tdelTask(){\n\t\tconst tempTasks = this.props.project.tasks.filter(t => t.id !== this.props.task.id);\n\t\tthis.props.project.tasks = tempTasks;\n\n\t\tthis.props.refreshDetailedPage(this.props.project.id);\n\t}\n\n\t// done/undone a task function\n\tdoneTask(){\n\t\tlet aTask = this.props.task;\n\t\tlet aProject = this.props.project;\n\n\t\tif(aTask.status === 'Done'){\n\n\t\t\taTask.status = 'Undone';\n\n\t\t\t// delete undone task from done task today list\n\t\t\tconst isThere = aProject.tasksDoneToday.find(t => t.id === aTask.id);\n\n\t\t\tif(isThere !== undefined){\n\n\t\t\t\tconst tempTasks = aProject.tasksDoneToday.filter(t => t.id !== aTask.id);\n\n\t\t\t\taProject.tasksDoneToday = tempTasks;\n\n\t\t\t}\n\t\t}else{\n\n\t\t\taTask.status = 'Done';\n\n\t\t\t// a done task to done task today list\n\t\t\taProject.tasksDoneToday.push(aTask);\n\t\t}\n\n\t\t// update project updated date\n\t\tif(aProject.tasksDoneToday.length > 0){\n\t\t\tconst today = new Date();\n\n\t\t\taProject.updated = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n\t\t}else{\n\t\t\taProject.updated = aProject.oldUpdated;\n\t\t}\n\n\t\tthis.props.refreshDetailedPage(aProject.id);\n\t}\n\n\trender(){\n\t\t// for action icon\n\t\tconst isCompleteButton = (this.props.task.status === 'Done')?\"undo\":\"done\";\n\n\t\t// for task name\n\t\tconst taskName = (this.props.task.status === 'Done')?<del>{this.props.task.name}</del>:this.props.task.name;\n\n\t\t// for button title\n\t\tconst isDone = (this.props.task.status === 'Done')?\"Undone\":\"Done\";\n\n\t\tlet actionButton = null;\n\n\t\t// show action button based on task status\n\t\tif(this.props.project.status !== 'Done'){\n\t\t\tactionButton = (\n\t\t\t\t<div className=\"float-right\">\n\t\t\t\t\t<button className=\"btn\" title={isDone} onClick={this.doneTask} ><i className=\"material-icons\">{isCompleteButton}</i></button>\n\t\t\t\t\t<button className=\"btn\" title=\"Delete\" onClick={this.delTask} ><i className=\"material-icons\">clear</i></button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\t\n\t\treturn(\n\t\t\t<div className=\"card mb-3\">\n\t\t\t\t<div className=\"card-body clearfix\">\n\t\t\t\t\t<p className=\"card-text float-left pt-2\">{taskName}</p>\n\t\t\t\t\t{actionButton}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// a component of add task form\nclass BSPTaskForm extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\ttaskName: ''\n\t\t};\n\n\t\tthis.addTask = this.addTask.bind(this);\n\t\tthis.fillTaskName = this.fillTaskName.bind(this);\n\t\tthis.getNextTaskId = this.getNextTaskId.bind(this);\n\t}\n\n\t// get next task id in a project\n\tgetNextTaskId(){\n\t\tlet maxID = 0;\n\n\t\tthis.props.project.tasks.forEach((task) => {\n\t\t\tif(Number(task.id) > maxID){\n\t\t\t\tmaxID = Number(task.id);\n\t\t\t}\n\t\t});\n\n\t\treturn (maxID+1);\n\t}\n\n\t// add task function\n\taddTask(e){\n\t\te.preventDefault();\n\t\tconst today = new Date();\n\n\t\t// to get new task ID\n\t\tconst newTaskID = this.getNextTaskId();\n\n\t\tlet aTask = {\n\t\t\tid: ''+newTaskID,\n\t\t\tproject_id: this.props.project.id,\n\t\t\tname: this.state.taskName,\n\t\t\tcreated: ''+today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate(),\n\t\t\tstatus: 'Undone'\n\t\t};\n\n\t\t\n\t\tthis.props.project.tasks.push(aTask);\n\n\t\tthis.props.refreshDetailedPage(this.props.project.id);\n\n\t\tthis.setState({taskName: ''});\n\t}\n\n\t// to change task name state\n\tfillTaskName(e){\n\t\tthis.setState({\n\t\t\ttaskName: e.target.value\n\t\t});\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<form className=\"bg-light px-3 pt-3\" onSubmit={this.addTask} >\n\t\t\t\t<div className=\"form-row\">\n\t\t\t\t\t<div className=\"col-md-9 mb-3\">\n\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Small task...\" onChange={this.fillTaskName} value={this.state.taskName} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-3 mb-3\">\n\t\t\t\t\t\t<button className=\"btn btn-primary col\" onClick={this.addTask} >Add</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\n// a component of edit project button and form\nclass BSPEditProject extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tprojectName: this.props.project.name,\n\t\t\tprojectDesc: this.props.project.description\n\t\t};\n\n\t\tthis.editProject = this.editProject.bind(this);\n\t\tthis.fillProjectName = this.fillProjectName.bind(this);\n\t\tthis.fillProjectDesc = this.fillProjectDesc.bind(this);\n\t\tthis.completeProject = this.completeProject.bind(this);\n\t\tthis.uncompleteProject = this.uncompleteProject.bind(this);\n\t\tthis.delProject = this.delProject.bind(this);\n\t\tthis.validateEdit = this.validateEdit.bind(this);\n\t\tthis.validateDone = this.validateDone.bind(this);\n\t}\n\n\t// edit project validation\n\tvalidateEdit(){\n\t\tif(this.state.projectName === ''){\n\t\t\talert(\"Project name is mandatory\");\n\t\t\treturn false;\n\t\t}else if(this.state.projectDesc === ''){\n\t\t\talert(\"Project description is mandatory\");\n\t\t\treturn false;\n\t\t}else if(this.state.projectDesc.length < 100){\n\t\t\talert(\"Description is should be 100 characters at least.\");\n\t\t\treturn false;\n\t\t}else{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t// done project validation\n\tvalidateDone(){\n\t\tconst tasks = this.props.project.tasks;\n\t\treturn  tasks.every(p => p.status === 'Done');\n\t}\n\n\t// change project name state\n\tfillProjectName(e){\n\t\tthis.setState({\n\t\t\tprojectName: e.target.value\n\t\t});\n\t}\n\n\t// change project description state\n\tfillProjectDesc(e){\n\t\tthis.setState({\n\t\t\tprojectDesc: e.target.value\n\t\t});\n\t}\n\n\t// edit project\n\teditProject(e){\n\t\te.preventDefault();\n\n\t\tlet aProject = this.props.project;\n\n\t\tif(this.validateEdit()){\n\t\t\taProject.name = this.state.projectName;\n\t\t\taProject.description = this.state.projectDesc;\n\n\t\t\tthis.props.refreshDetailedPage(aProject.id);\n\n\t\t\talert(\"Edit project is success!\");\n\t\t}\n\n\t\tthis.setState({\n\t\t\tprojectName: this.props.project.name,\n\t\t\tprojectDesc: this.props.project.description\n\t\t});\n\t}\n\n\t// complete project\n\tcompleteProject(){\n\t\tlet aProject = this.props.project;\n\t\tconst today = new Date();\n\n\t\tif(this.validateDone()){\n\t\t\taProject.status = 'Done';\n\t\t\taProject.finished = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n\t\t\tthis.props.refreshDetailedPage(aProject.id);\n\t\t}else{\n\t\t\talert(\"All tasks should be Done.\");\n\t\t}\n\t\t\n\t}\n\n\t// undo complete project\n\tuncompleteProject(){\n\t\tlet aProject = this.props.project;\n\n\t\taProject.status = 'In Progress';\n\t\taProject.finished = null;\n\n\t\tthis.props.refreshDetailedPage(aProject.id);\n\t}\n\n\t// delete project\n\tdelProject(e){\n\t\tif(window.confirm(\"Are you sure to delete this project?\")){\n\t\t\tconst tempProjects = this.props.projects.projectList.filter(p => p.id !== this.props.project.id);\n\t\t\tthis.props.projects.projectList = tempProjects;\n\t\t\tthis.props.gotoHome(e);\n\t\t}\n\t}\n\n\trender(){\n\n\t\t// when edit button is showed\n\t\tconst editButton = (this.props.project.status === 'Done')?null:<button className=\"btn btn-primary mr-2\" title=\"Edit\" data-toggle=\"modal\" data-target=\"#formEditProject\">Edit</button>;\n\n\t\t// when complete button is showed\n\t\tconst completeButton = (this.props.project.status === 'Done')?<button className=\"btn btn-success\" title=\"Undo Complete Project\" onClick={this.uncompleteProject} >Undo</button>:<button className=\"btn btn-success\" title=\"Complete Project\" onClick={this.completeProject} >It's Complete!</button>;\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{editButton}\n\t            <button className=\"btn btn-danger mr-2\" title=\"Delete\" onClick={this.delProject} >Delete</button>\n\t            {completeButton}\n\n\t\t\t\t<div className=\"modal fade\" id=\"formEditProject\" tabIndex=\"-1\" role=\"dialog\">\n\t\t\t\t\t<div className=\"modal-dialog\" role=\"document\">\n\t\t\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t<h5 className=\"modal-title\">Edit Project</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t<form onSubmit={this.editProject} >\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"col-form-label\">Project Name</label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={this.state.projectName} onChange={this.fillProjectName} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"col-form-label\">Description</label>\n\t\t\t\t\t\t\t\t\t\t<textarea className=\"form-control\" rows=\"3\" placeholder=\"Three sentences is good...\" value={this.state.projectDesc} onChange={this.fillProjectDesc} ></textarea>\n\t\t\t\t\t\t\t\t\t\t<span>{this.state.projectDesc.length} characters</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={this.editProject} >Save</button>\n\t\t\t\t\t\t\t\t<button className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// a component of add project form\nclass BSPAddProject extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tprojectName: '',\n\t\t\tprojectDesc: ''\n\t\t}\n\n\t\tthis.addProject = this.addProject.bind(this);\n\t\tthis.fillProjectName = this.fillProjectName.bind(this);\n\t\tthis.fillProjectDesc = this.fillProjectDesc.bind(this);\n\t\tthis.validate = this.validate.bind(this);\n\t\tthis.getNextProjectId = this.getNextProjectId.bind(this);\n\t}\n\n\t// get new project ID\n\tgetNextProjectId(){\n\t\tlet maxID = 0;\n\n\t\tthis.props.projects.projectList.forEach((project) => {\n\t\t\tif(Number(project.id) > maxID){\n\t\t\t\tmaxID = Number(project.id);\n\t\t\t}\n\t\t});\n\n\t\treturn (maxID+1);\n\t}\n\n\t// add project validation\n\tvalidate(){\n\t\tif(this.state.projectName === ''){\n\t\t\talert(\"Project name is mandatory\");\n\t\t\treturn false;\n\t\t}else if(this.state.projectDesc === ''){\n\t\t\talert(\"Project description is mandatory\");\n\t\t\treturn false;\n\t\t}else if(this.state.projectDesc.length < 100){\n\t\t\talert(\"Description is should be 100 characters at least.\");\n\t\t\treturn false;\n\t\t}else{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t// change project name state\n\tfillProjectName(e){\n\t\tthis.setState({\n\t\t\tprojectName: e.target.value\n\t\t});\n\t}\n\n\t// change project description state\n\tfillProjectDesc(e){\n\t\tthis.setState({\n\t\t\tprojectDesc: e.target.value\n\t\t});\n\t}\n\n\t// add project\n\taddProject(e){\n\t\te.preventDefault();\n\n\t\tconst newID = this.getNextProjectId();\n\t\tconst today = new Date();\n\n\t\tlet aProject = {\n\t\t\tid: ''+newID,\n\t\t\tname: this.state.projectName,\n\t\t\tcreated: today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate(),\n\t\t\tupdated: today.getFullYear()+'-'+(today.getMonth()+1)+'-'+(today.getDate()-1),\n\t\t\tstatus: 'In Progress',\n\t\t\tdescription: this.state.projectDesc,\n\t\t\tfinished: null,\n\t\t\ttasks: [],\n\t\t\ttasksDoneToday: []\n\t\t}\n\n\t\tif(this.validate()){\n\t\t\tthis.props.projects.projectList.push(aProject);\n\n\t\t\tthis.props.gotoHome(e);\n\n\t\t\tthis.setState({\n\t\t\t\tprojectName: '',\n\t\t\t\tprojectDesc: ''\n\t\t\t});\n\t\t}\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"modal fade\" id=\"formAddProject\" tabIndex=\"-1\" role=\"dialog\">\n\t\t\t\t<div className=\"modal-dialog\" role=\"document\">\n\t\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t<h5 className=\"modal-title\">Add New Project</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t<form onSubmit={this.addProject} >\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label className=\"col-form-label\">Project Name</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={this.state.projectName} onChange={this.fillProjectName} placeholder=\"Project name is mandatory\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label className=\"col-form-label\">Description</label>\n\t\t\t\t\t\t\t\t\t<textarea className=\"form-control\" rows=\"3\" placeholder=\"At least 100 characters is good...\" value={this.state.projectDesc} onChange={this.fillProjectDesc} ></textarea>\n\t\t\t\t\t\t\t\t\t<span>{this.state.projectDesc.length} characters</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={this.addProject} >Save</button>\n\t\t\t\t\t\t\t<button className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// a component to show home page\nclass BSPHome extends React.Component{\n\trender(){\n\t\tconst doneProjects = [];\n\t\tconst undoneProjects = [];\n\n\t\t// filter done today project and undone today project\n\t\tthis.props.projects.projectList.forEach((project) => {\n\t\t\tif(project.status === 'In Progress'){\n\t\t\t\tconst updated = new Date(project.updated);\n\t\t\t\tconst today = new Date();\n\t\t\t\ttoday.setHours(0, 0, 0, 0);\n\n\t\t\t\tif(updated.getTime() >= today.getTime()){\n\t\t\t\t\tdoneProjects.push(project);\n\t\t\t\t}else{\n\t\t\t\t\tundoneProjects.push(project);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// map to some project card\n\t\tconst doneProjectsCards = doneProjects.map((project) =>\n\t\t\t<BSPProjectCard key={project.id} project={project} gotoDetailed={this.props.gotoDetailed} />\n\t\t);\n\n\t\tconst undoneProjectsCards = undoneProjects.map((project) =>\n\t\t\t<BSPProjectCard key={project.id} project={project} gotoDetailed={this.props.gotoDetailed} />\n\t\t);\n\n\t\treturn(\n\t\t\t<div className=\"row justify-content-center\">\n\t\t\t\t<div className=\"col-md-4 mb-5\">\n\t\t\t\t\t<h2 className=\"mb-5\">Let's do it today!</h2>\n\t\t\t\t\t{undoneProjectsCards}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md-4 mb-5\">\n\t\t\t\t\t<h2 className=\"mb-5\">Done today.</h2>\n\t\t\t\t\t{doneProjectsCards}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// a component to show completed projects\nclass BSPAchievement extends React.Component{\n\trender(){\n\t\tconst completeProjects = [];\n\n\t\t// filter completed projects\n\t\tthis.props.projects.projectList.forEach((project) => {\n\t\t\tif(project.status === 'Done'){\n\t\t\t\tcompleteProjects.push(\n\t\t\t\t\t<div className=\"col-md-4\" key={project.id}>\n\t\t\t\t\t\t<BSPProjectCard project={project} gotoDetailed={this.props.gotoDetailed} />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treturn(\n\t\t\t<div className=\"row py-5\">\n\t\t\t\t<div className=\"col-md-12 mb-5\">\n\t\t\t\t\t<h1>Congratulations! This is what you've tackle so far.</h1>\n\t\t\t\t\t<a href=\"home\" className=\"text-muted\" onClick={this.props.gotoHome} >Back to home</a>\n\t\t\t\t</div>\n\n\t\t\t\t{completeProjects}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// a component to show search result page\nclass BSPSearchResult extends React.Component{\n\trender(){\n\t\tconst searchResult = [];\n\n\t\t// filter project based on search keyword\n\t\tthis.props.projects.projectList.forEach((project) => {\n\t\t\tconst byName = (project.name.toUpperCase()).indexOf(this.props.searchText.toUpperCase());\n\t\t\tconst byDesc = (project.description.toUpperCase()).indexOf(this.props.searchText.toUpperCase());\n\n\t\t\tif((byName !== -1) || (byDesc !== -1)){\n\t\t\t\tsearchResult.push(project);\n\t\t\t}\n\t\t});\n\n\n\t\t// map to some project cards\n\t\tconst searchResultCards = searchResult.map((project) =>\n\t\t\t<div className=\"col-md-4\" key={project.id} >\n\t\t\t\t<BSPProjectCard project={project} gotoDetailed={this.props.gotoDetailed} />\n\t\t\t</div>\n\t\t);\n\n\t\treturn(\n\t\t\t<div className=\"row py-5\">\n\t\t\t\t<div className=\"col-md-12 mb-5\">\n\t\t\t\t\t<h1>Is this what you search?</h1>\n\t\t\t\t\t<a href=\"home\" className=\"text-muted\" onClick={this.props.gotoHome} >Back to home</a>\n\t\t\t\t</div>\n\n\t\t\t\t{searchResultCards}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// a component to show detail project page\nclass BSPDetailProject extends React.Component{\n\trender(){\n\n\t\t// map to some project task cards\n\t\tconst tasks = this.props.project.tasks.map((task) => \n\t\t\t<BSPProjectTask task={task} key={task.id} project={this.props.project} refreshDetailedPage={this.props.refreshDetailedPage} />\n\t\t);\n\n\t\t// when task form is showed\n\t\tconst taskForm = (this.props.project.status === 'Done')?null:<BSPTaskForm project={this.props.project} refreshDetailedPage={this.props.refreshDetailedPage} />;\n\n\t\treturn(\n\t\t\t<div className=\"row py-5\">\n\t\t\t\t<div className=\"col-md-12 mb-5\">\n\t\t\t\t\t<h3>Do it one small step at a time so you can done it easily.</h3>\n\t\t\t\t\t<a href=\"home\" className=\"text-muted\" onClick={this.props.gotoHome} >Back to home</a>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col-md-6 mb-5\">\n\t\t\t\t\t<BSPProjectCard project={this.props.project} gotoDetailed={this.props.gotoDetailed} />\n\t\t\t\t\t<BSPEditProject project={this.props.project} gotoHome={this.props.gotoHome} refreshDetailedPage={this.props.refreshDetailedPage} projects={this.props.projects} />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t<h5 className=\"mb-3\">List of small tasks</h5>\n\t\t\t\t\t{tasks}\n\t\t\t\t\t{taskForm}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// a component to show navbar\nclass BSPNavbar extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.fillSearchText = this.fillSearchText.bind(this);\n\t}\n\n\t// change search keyword state\n\tfillSearchText(e){\n\t\tthis.props.fillSearchText(e.target.value);\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<a href=\"home\" onClick={this.props.gotoHome} ><span className=\"navbar-brand\" title=\"Home\">Baby Step Project</span></a>\n\n\t\t\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarItem\">\n\t\t\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<div className=\"collapse navbar-collapse justify-content-end mt-2\" id=\"navbarItem\">\n\t\t\t\t\t\t\t<ul className=\"nav justify-content-end\">\n\t\t\t\t\t\t\t\t<li className=\"nav-item\" title=\"Save\"><button className=\"btn btn-primary\"><i className=\"material-icons\">save</i></button></li>\n\t\t\t\t\t\t\t\t<li className=\"nav-item\" title=\"Achievements\"><button href=\"achievements\" className=\"btn btn-primary\" onClick={this.props.gotoAchievements} ><i className=\"material-icons\">emoji_events</i></button></li>\n\t\t\t\t\t\t\t\t<li className=\"nav-item\" title=\"Add Project\"><button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#formAddProject\"><i className=\"material-icons\">note_add</i></button></li>\n\t\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t\t<form className=\"form-inline ml-2\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Search here...\" value={this.props.searchText} onChange={this.fillSearchText} />\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</nav>\n\n\t\t\t\t<BSPAddProject gotoHome={this.props.gotoHome} projects={this.props.projects} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// a component to show mini summary\nclass BSPMiniDashboard extends React.Component{\n\trender(){\n\t\tconst completeProjects = [];\n\t\tconst incompleteProjects = [];\n\n\t\t// filter completed and incomplete projects\n\t\tthis.props.projects.projectList.forEach((project) => {\n\t\t\tif(project.status === 'Done'){\n\t\t\t\tcompleteProjects.push(project);\n\t\t\t}else{\n\t\t\t\tincompleteProjects.push(project);\n\t\t\t}\n\t\t});\n\n\t\treturn(\n\t\t\t<div className=\"jumbotron bg-light\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<h1 className=\"display-4\">You've completed {completeProjects.length} projects,<br />now do the remaining {incompleteProjects.length}, one step at a time</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// a component to show footer\nclass BSPFooter extends React.Component{\n\trender(){\n\t\treturn(\n\t\t\t<footer className=\"bg-light py-5\">\n\t\t\t\t<div className=\"container text-center\">\n\t\t\t\t\t<p className=\"m-0\">© 2019 M Fatoni</p>\n\t\t\t\t</div>\n\t\t\t</footer>\n\t\t);\n\t}\n}\n\n// main apps\nclass BSPApps extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tlet projects = [];\n\t\tconst tasks = this.props.tasks;\n\n\t\t// construct project and it's tasks\n\t\tthis.props.projects.forEach((project) => {\n\t\t\t\n\t\t\tlet newProject = project;\n\n\t\t\t// for project tasks\n\t\t\tnewProject.tasks = [];\n\n\t\t\t// for project task done today\n\t\t\tnewProject.tasksDoneToday = [];\n\n\t\t\t// for old updated date\n\t\t\tnewProject.oldUpdated = project.updated;\n\n\t\t\t// assign task\n\t\t\ttasks.forEach((task) => {\n\t\t\t\tif(task.project_id === newProject.id){\n\t\t\t\t\tnewProject.tasks.push(task);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tprojects.push(newProject);\n\t\t});\n\n\t\t// manipulasi agar tidak perlu membuat fungsi ubah state di depan\n\t\tlet datas = {\n\t\t\tprojectList: projects\n\t\t};\n\n\t\tthis.state = {\n\t\t\tpage: 'home',\n\t\t\tdetailedProject: null,\n\t\t\tsearchText: '',\n\t\t\tprojects: datas\n\t\t};\n\n\t\tthis.gotoAchievements = this.gotoAchievements.bind(this);\n\t\tthis.gotoHome = this.gotoHome.bind(this);\n\t\tthis.gotoDetailed = this.gotoDetailed.bind(this);\n\n\t\tthis.fillSearchText = this.fillSearchText.bind(this);\n\n\t\tthis.refreshDetailedPage = this.refreshDetailedPage.bind(this);\n\t}\n\n\t// change search keyword state\n\tfillSearchText(text){\n\n\t\t// if blank go to home\n\t\tif(text === ''){\n\t\t\tthis.setState({\n\t\t\t\tsearchText: text,\n\t\t\t\tpage: 'home'\n\t\t\t});\n\t\t}else{\n\t\t\tthis.setState({\n\t\t\t\tsearchText: text,\n\t\t\t\tpage: 'search'\n\t\t\t});\n\t\t}\n\t}\n\n\t// go to achievements page\n\tgotoAchievements(e){\n\t\te.preventDefault();\n\t\tthis.setState({\n\t\t\tpage: 'achievements',\n\t\t\tdetailedProject: null\n\t\t});\n\t}\n\n\t// go to home page\n\tgotoHome(e){\n\t\te.preventDefault();\n\n\t\tthis.setState({\n\t\t\tpage: 'home',\n\t\t\tdetailedProject: null\n\t\t});\n\t}\n\n\t// go to detailed page\n\tgotoDetailed(project_id, e){\n\t\te.preventDefault();\n\t\t\n\t\tthis.setState({\n\t\t\tpage: 'detailed',\n\t\t\tdetailedProject: project_id\n\t\t});\n\t}\n\n\t// refresh detailed page, for changes\n\trefreshDetailedPage(project_id){\n\t\tthis.setState({\n\t\t\tpage: 'detailed',\n\t\t\tdetailedProject: project_id\n\t\t});\n\t}\n\n\trender(){\n\n\t\t// just a navbar\n\t\tconst navbar = <BSPNavbar gotoAchievements={this.gotoAchievements} gotoHome={this.gotoHome} fillSearchText={this.fillSearchText} searchText={this.state.searchText} projects={this.state.projects} />;\n\n\t\t// just a footer\n\t\tconst footer = <BSPFooter />;\n\n\t\t// just a mini dashboard and when to show it\n\t\tconst minidashboard = (this.state.page === 'home')?<BSPMiniDashboard projects={this.state.projects} />:null;\n\n\t\t// main page\n\t\tlet content = null;\n\n\t\t// home page\n\t\tif(this.state.page === 'home'){\n\t\t\tcontent = <BSPHome projects={this.state.projects} gotoDetailed={this.gotoDetailed} />;\n\n\t\t// achievement page\n\t\t}else if(this.state.page === 'achievements'){\n\t\t\tcontent = <BSPAchievement projects={this.state.projects} gotoHome={this.gotoHome} gotoDetailed={this.gotoDetailed} />;\n\n\t\t// detailed page\n\t\t}else if(this.state.page === 'detailed'){\n\t\t\tif(this.state.detailedProject === null){\n\t\t\t\tcontent = null;\n\t\t\t}else{\n\t\t\t\tcontent = <BSPDetailProject \n\t\t\t\t\tproject={this.state.projects.projectList.find(p => p.id === this.state.detailedProject)}\n\t\t\t\t\tprojects={this.state.projects} \n\t\t\t\t\tgotoHome={this.gotoHome} \n\t\t\t\t\tgotoDetailed={this.gotoDetailed} \n\t\t\t\t\trefreshDetailedPage={this.refreshDetailedPage}\n\t\t\t\t/>;\n\t\t\t}\n\n\t\t//search result page\n\t\t}else if(this.state.page === 'search'){\n\t\t\tcontent = <BSPSearchResult gotoHome={this.gotoHome} projects={this.state.projects} gotoDetailed={this.gotoDetailed} searchText={this.state.searchText} />\n\t\t}\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{navbar}\n\t\t\t\t{minidashboard}\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{content}\n\t\t\t\t</div>\n\t\t\t\t{footer}\n\t\t\t</div>\n\t\t);\n\t\t\n\t}\n}\n\n\nlet projects = [\n\t{id: '1', name: 'Baby Step Project', created: '2019-09-01', updated: '2019-10-20', status: 'In Progress', description: 'Project membuat aplikasi project. Menggunakan framework mini habit, yaitu mengerjakan project one step at atime', finished: null},\n\t{id: '2', name: 'Cerpen SUAMI', created: '2019-10-10', updated: '2019-10-23', status: 'In Progress', description: 'Project membuat cerita pendek. Menceritakan tentang pasangan LDM yang diganggu genderuwo.', finished: null},\n\t{id: '3', name: 'Cerpen ala Lovecraft', created: '2019-07-31', updated: '2019-09-20', status: 'Done', description: 'Project membuat cerita pendek. Ceritanya bergenre horor kosmik dan gaya penulisannya menirukan Lovecraft.', finished: '2019-09-01'}\n];\n\nlet tasks = [\n\t{id: '1', project_id: '1', name: 'Install React-js', status: 'Done', created: '2019-10-01'},\n\t{id: '2', project_id: '1', name: 'Sampling data', status: 'Undone', created: '2019-10-10'},\n\t{id: '3', project_id: '2', name: 'Scene #1', status: 'Done', created: '2019-10-11'},\n\t{id: '4', project_id: '2', name: 'Scene #2', status: 'Undone', created: '2019-10-12'},\n\t{id: '5', project_id: '3', name: 'Paragraf #1', status: 'Done', created: '2019-08-11'},\n\t{id: '6', project_id: '3', name: 'Paragraf #2', status: 'Done', created: '2019-08-12'}\n];\n\n\nReactDOM.render(\n  <BSPApps \n  \tprojects={projects}\n  \ttasks={tasks}\n  />,\n  document.getElementById('root')\n);"],"sourceRoot":""}